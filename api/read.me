# Youtube-description-ai

G√©n√©rez automatiquement des descriptions YouTube optimis√©es et engageantes √† partir de la transcription d‚Äôune vid√©o, gr√¢ce √† l‚ÄôIA et LangChain.

---

## Sommaire

- [Pr√©sentation](#pr√©sentation)
- [Fonctionnalit√©s](#fonctionnalit√©s)
- [Installation](#installation)
- [Configuration](#configuration)
- [Utilisation](#utilisation)
- [API](#api)
- [Exemple de r√©sultat](#exemple-de-r√©sultat)
- [D√©pendances](#d√©pendances)
- [Astuces et limitations](#astuces-et-limitations)
- [Licence](#licence)

---

## Pr√©sentation

Ce projet permet de g√©n√©rer automatiquement une description YouTube compl√®te, structur√©e et optimis√©e SEO √† partir de la transcription d‚Äôune vid√©o. Il utilise FastAPI pour l‚ÄôAPI, LangChain pour l‚Äôorchestration des prompts, et un mod√®le LLM via Together AI.

---

## Fonctionnalit√©s

- **Extraction automatique de la transcription** d‚Äôune vid√©o YouTube.
- **G√©n√©ration de description compl√®te**‚ÄØ: titre, r√©sum√©, liens utiles, chapitrage, mots-cl√©s, hashtags, call-to-action, pr√©sentation de la cha√Æne.
- **Optimisation SEO**‚ÄØ: int√©gration naturelle des mots-cl√©s et hashtags.
- **Personnalisation**‚ÄØ: adaptation au ton, √† la langue, ajout de liens personnalis√©s, chapitrage manuel ou automatique.
- **API REST** pour int√©gration facile dans vos outils ou frontends.

---

## Installation

1. **Clonez le d√©p√¥t**
   ```bash
   git clone https://github.com/votre-utilisateur/Youtube-description-ai.git
   cd Youtube-description-ai
   ```

2. **Installez les d√©pendances**
   ```bash
   pip install -r requirements.txt
   ```

---

## Configuration

- **Cl√© API Together**  
  Renseignez votre cl√© API dans le fichier `description_generator.py`‚ÄØ:
  ```python
  TOGETHER_API_KEY = "votre_cle_api"
  ```

- **Param√®tres du mod√®le**  
  Vous pouvez ajuster le mod√®le, la temp√©rature, et le nombre de tokens dans la cr√©ation de l‚Äôobjet `ChatTogether`.

---

## Utilisation

### Lancer l‚ÄôAPI

```bash
uvicorn api:app --reload
```

L‚ÄôAPI sera disponible sur [http://127.0.0.1:8000/docs](http://127.0.0.1:8000/docs) pour tester via Swagger.

### Exemple de requ√™te POST

```json
POST /generate
Content-Type: application/json

{
  "video_type": "analyse",
  "video_url": "https://www.youtube.com/watch?v=xxxxxxx",
  "description_tone": "engageant",
  "optional_keywords": "football, Bar√ßa, Ligue des Champions, analyse, critique",
  "transcript_format": "texte",
  "transcript": "",
  "languages": ["fr"],
  "translation": "",
  "hashtags": "#Football #Bar√ßa #LigueDesChampions #Analyse #Critique",
  "timestamps_mode": "auto",
  "manual_timestamps": "",
  "useful_links": [
    {"Github": "https://github.com/"},
    {"LangChain Docs": "https://python.langchain.com"}
  ]
}
```

---

## API

- **Endpoint**‚ÄØ: `/generate`
- **M√©thode**‚ÄØ: `POST`
- **Corps attendu**‚ÄØ: Voir l‚Äôexemple ci-dessus (`VideoData`)
- **R√©ponse**‚ÄØ: Un JSON structur√© avec‚ÄØ:
  - `title`
  - `resume`
  - `links`
  - `timestamps`
  - `keywords`
  - `call_to_action`
  - `about_channel`

---

## Exemple de r√©sultat

```json
{
  "title": "D√©couvrez mon analyse passionnante sur la d√©faite du Bar√ßa ! Tu veux savoir ce qui s'est vraiment pass√© ? Regarde cette vid√©o jusqu'au bout !",
  "resume": "Dans cette vid√©o, je partage avec toi mon avis sur la d√©faite du Bar√ßa et les erreurs qui ont √©t√© commises...",
  "links": [
    {"Github": "https://github.com/"},
    {"LangChain Docs": "https://python.langchain.com"}
  ],
  "timestamps": "‚è±Ô∏è Chapitrages : ...",
  "keywords": "Mots-cl√©s : football, Bar√ßa, Ligue des Champions, analyse, critique. #Football #Bar√ßa #LigueDesChampions #Analyse #Critique",
  "call_to_action": "Si tu as aim√© cette vid√©o, n'oublie pas de liker üëç, de t'abonner üîî et de partager avec tes amis ! ...",
  "about_channel": "Bienvenue sur ma cha√Æne ! Ici, nous discutons de tout ce qui concerne le football ..."
}
```

---

## D√©pendances

- `langchain_groq`
- `langchain_core`
- `langchain-together`
- `langchain_community`
- `youtube-transcript-api`
- `fastapi`
- `pydantic`

---

## Astuces et limitations

- **Limite de tokens**‚ÄØ: Si la vid√©o est longue, la transcription peut d√©passer la limite du mod√®le. Tronquez ou r√©sumez la transcription si besoin.
- **Transcription YouTube**‚ÄØ: Certaines vid√©os n‚Äôont pas de transcription disponible (priv√©es, d√©sactiv√©es, etc.).
- **Personnalisation**‚ÄØ: Adaptez le prompt dans `description_generator.py` pour votre th√©matique ou style.

---

## Licence

MIT

---

_Ajoutez vos captures d‚Äô√©cran ou exemples visuels ici si besoin._